/*
 * This code was generated by AWS Flow Framework Annotation Processor.
 * Refer to Amazon Simple Workflow Service documentation at http://aws.amazon.com/documentation/swf 
 *
 * Any changes made directly to this file will be lost when 
 * the code is regenerated.
 */
 package com.amazonaws.services.simpleworkflow.flow.examples.deployment;

import com.amazonaws.services.simpleworkflow.flow.core.Promise;
import com.amazonaws.services.simpleworkflow.flow.StartWorkflowOptions;
import com.amazonaws.services.simpleworkflow.flow.WorkflowClient;

/**
 * Generated from {@link com.amazonaws.services.simpleworkflow.flow.examples.deployment.DeploymentWorkflow}. 
 * Used to invoke child workflows asynchronously from parent workflow code.
 * Created through {@link DeploymentWorkflowClientFactory#getClient}.
 * <p>
 * When running outside of the scope of a workflow use {@link DeploymentWorkflowClientExternal} instead.
 */
public interface DeploymentWorkflowClient extends WorkflowClient
{

    /**
     * Generated from {@link com.amazonaws.services.simpleworkflow.flow.examples.deployment.DeploymentWorkflow#deploy}
     */
    Promise<String> deploy(String springTemplate);

    /**
     * Generated from {@link com.amazonaws.services.simpleworkflow.flow.examples.deployment.DeploymentWorkflow#deploy}
     */
    Promise<String> deploy(String springTemplate, Promise<?>... waitFor);

    /**
     * Generated from {@link com.amazonaws.services.simpleworkflow.flow.examples.deployment.DeploymentWorkflow#deploy}
     */
    Promise<String> deploy(String springTemplate, StartWorkflowOptions optionsOverride, Promise<?>... waitFor);

    /**
     * Generated from {@link com.amazonaws.services.simpleworkflow.flow.examples.deployment.DeploymentWorkflow#deploy}
     */
    Promise<String> deploy(Promise<String> springTemplate);

    /**
     * Generated from {@link com.amazonaws.services.simpleworkflow.flow.examples.deployment.DeploymentWorkflow#deploy}
     */
    Promise<String> deploy(Promise<String> springTemplate, Promise<?>... waitFor);

    /**
     * Generated from {@link com.amazonaws.services.simpleworkflow.flow.examples.deployment.DeploymentWorkflow#deploy}
     */
    Promise<String> deploy(Promise<String> springTemplate, StartWorkflowOptions optionsOverride, Promise<?>... waitFor);

}